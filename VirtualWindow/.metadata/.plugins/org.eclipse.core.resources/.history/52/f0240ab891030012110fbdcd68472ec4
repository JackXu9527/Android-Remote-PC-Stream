package my.name.is.main;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;

import org.apache.commons.io.IOUtils;
import org.apache.commons.io.output.CountingOutputStream;

public class Executable {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		downloadUsingApache();
	}

	class DownloadingProgressListener extends CountingOutputStream {

		private ActionListener listener;
		private OutputStream out;
		
		public DownloadingProgressListener(OutputStream out) {
			super(out);
			this.out = out;	
		}

		public void setListener(ActionListener listener) {
			this.listener = listener;
		}

		@Override
		protected void afterWrite(int n) throws IOException {
			super.afterWrite(n);
			if (listener != null) {
				//listener.actionPerformed(new ActionEvent(this, 0, null));
			}
		}

		@Override
		public synchronized long getByteCount() {
			// TODO Auto-generated method stub
			return super.getByteCount();
			System.out.println("Count: ");
		}

	}

	private static void downloadUsingApache() {
		URL dl = null;
		File fl = null;
		String x = null;

		try {
			fl = new File("test.3gp");
			dl = new URL(
					"https://dl.dropbox.com/u/35572825/BlueToothTest/test.3gp");
			OutputStream os = new FileOutputStream(fl);
			InputStream is = dl.openStream();
			CountingOutputStream count = new CountingOutputStream(os);

			dl.openConnection().getHeaderField("Content-Length");
			IOUtils.copy(is, os);

			os.close();
			is.close();
			System.out.println("Count: " + count.getByteCount());
		} catch (Exception e) {
			System.out.println(e);
		}

	}
}
